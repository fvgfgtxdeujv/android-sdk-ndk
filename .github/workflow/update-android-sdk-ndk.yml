name: Update Android SDK & NDK

on:
  workflow_dispatch:
    inputs:
      target:
        description: "更新目标：sdk / ndk / both"
        required: true
        default: "both"
        type: choice
        options:
          - sdk
          - ndk
          - both

env:
  TZ: Asia/Shanghai

jobs:
  # 1. 更新 SDK
  sdk:
    if: ${{ contains(fromJSON('["sdk","both"]'), inputs.target) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 安装依赖
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl p7zip-full zstd git git-lfs

      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 设置 Git LFS
        run: |
          git lfs install --local
          git lfs track "*.tar.zst"
          git add .gitattributes

      - name: 生成东八区时间戳
        id: time
        run: echo "ts=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_OUTPUT

      - name: 下载并压缩 SDK
        run: |
          # 示例版本号，请在自己的仓库 Variables 里定义 ANDROID_SDK_VER
          SDK_VER="${{ vars.ANDROID_SDK_VER }}"
          SDK_URL="https://dl.google.com/android/repository/commandlinetools-linux-${SDK_VER}_latest.zip"
          echo "Downloading $SDK_URL ..."
          curl -fL "$SDK_URL" -o sdk.zip || { echo "SDK 下载失败，请检查网络或 ANDROID_SDK_VER 变量"; exit 1; }
          7z x sdk.zip -osdk/ -y -bsp0
          tar -C sdk --use-compress-program="zstd -19" -cf android-sdk-tools.tar.zst .
          rm -rf sdk sdk.zip

      - name: 提交 & 推送
        run: |
          TS=$(date +'%Y-%m-%d-%H%M')
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add android-sdk-tools.tar.zst .gitattributes
          git commit -m "Update SDK ${TS}" || exit 0
          git push origin master

      - name: 创建 SDK Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: sdk-${{ steps.time.outputs.ts }}
          name: Android SDK ${{ steps.time.outputs.ts }}（UTC+8）
          body: "自动打包 SDK（东八区 ${{ steps.time.outputs.ts }}）"
          files: android-sdk-tools.tar.zst

  # 2. 更新 NDK
  ndk:
    if: ${{ contains(fromJSON('["ndk","both"]'), inputs.target) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 安装依赖
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y curl git git-lfs

      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 设置 Git LFS
        run: |
          git lfs install --local
          git lfs track "*.tar.zst"
          git add .gitattributes

      - name: 生成东八区时间戳
        id: time
        run: echo "ts=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_OUTPUT

      - name: 下载 NDK
        run: |
          NDK_URL="${{ vars.ANDROID_NDK_URL }}"
          echo "Downloading $NDK_URL ..."
          curl -fL "$NDK_URL" -o ndk-linux.tar.zst || { echo "NDK 下载失败，请检查网络或 ANDROID_NDK_URL 变量"; exit 1; }

      - name: 提交 & 推送
        run: |
          TS=$(date +'%Y-%m-%d-%H%M')
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add ndk-linux.tar.zst .gitattributes
          git commit -m "Update NDK ${TS}" || exit 0
          git lfs push origin master
          git push origin master

      - name: 创建 NDK Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ndk-${{ steps.time.outputs.ts }}
          name: Android NDK ${{ steps.time.outputs.ts }}（UTC+8）
          body: "自动打包 NDK（东八区 ${{ steps.time.outputs.ts }}）"
          files: ndk-linux.tar.zst
